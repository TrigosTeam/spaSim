[{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"basics","dir":"Articles","previous_headings":"","what":"Basics","title":"spaSim vignette","text":"spaSim (spatial Simulator) simulator tumor immune microenvironment spatial data. includes family functions simulate diverse set cell localization patterns tissues. Patterns include background cells (one cell type multiple cell types different proportions), tumour/immune clusters, immune rings double immune rings stripes (blood/lymphatic vessels). quantitative tools spatial tissue image analysis developed need benchmarking, simulations spaSim can applied test benchmark tools metrics. output spaSim images SingleCellExperiment object format can used SPIAT (SPIAT (Spatial Image Analysis Tissues) also developed team.","code":""},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"installing-spasim","dir":"Articles","previous_headings":"Basics","what":"Installing spaSim","title":"spaSim vignette","text":"spaSim R package available via Bioconductor repository packages. can install lasted development version Github. can install spaSim using following commands R session:","code":"## Check that you have a valid Bioconductor installation BiocManager::valid() if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {       install.packages(\"BiocManager\")   }  BiocManager::install(\"spaSim\")  # install from GitHub install.packages(\"devtools\") devtools::install_github(\"TrigosTeam/spaSim\")"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"citing-spasim","dir":"Articles","previous_headings":"Basics","what":"Citing spaSim","title":"spaSim vignette","text":"hope spaSim useful research. Please use following information cite package overall approach. Thank !","code":"## Citation info citation(\"spaSim\") #>  #> To cite package 'spaSim' in publications use: #>  #>   Feng Y, Trigos A (2022). _spaSim: Spatial point data simulator for #>   tissue images_. R package version 0.99.1, #>   <https://trigosteam.github.io/spaSim/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {spaSim: Spatial point data simulator for tissue images}, #>     author = {Yuzhou Feng and Anna Trigos}, #>     year = {2022}, #>     note = {R package version 0.99.1}, #>     url = {https://trigosteam.github.io/spaSim/}, #>   }"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"quick-start-to-using-spasim","dir":"Articles","previous_headings":"","what":"Quick start to using spaSim","title":"spaSim vignette","text":"First attach package","code":"library(spaSim)"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-an-individual-image","dir":"Articles","previous_headings":"Quick start to using spaSim","what":"Simulate an individual image","title":"spaSim vignette","text":"spaSim, spatial patterns simulated separate layers sequentially starting ‘background cells’ serve canvas higher order structures (e.g. tumour clusters, immune clusters immune rings can simulated /top background cells). go steps.","code":""},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-background-cells","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulate an individual image","what":"Simulate background cells","title":"spaSim vignette","text":"First randomly generate spatial locations generic ‘background cells’ (without cell identities). ‘background cells’ serve input simulation functions shown can assign new identities cells structured unstructured way. Background images simulated Hardcore Process, Poisson process events (.e. cells) maintained specific minimum distance . rHardcore spatstat.random package deletes cells based requirement, function uses oversampling_rate create cells target number cells (n_cells) ensure resulting image number cells specified. resulting image ends slightly fewer cells specified, increase oversampling_rate argument account .","code":"set.seed(610) bg <- simulate_background_cells(n_cells = 5000,                                 width = 2000,                                 height = 2000,                                 min_d = 10,                                 oversampling_rate = 1.6,                                 Phenotype=\"Others\") head(bg) #>           Cell.X.Position Cell.Y.Position Phenotype #> Cell_55          156.3994        349.0815    Others #> Cell_2226        878.6766        633.4749    Others #> Cell_1113        569.0253        489.3713    Others #> Cell_4788       1996.0439        292.1873    Others #> Cell_4600       1756.8683       1608.0244    Others #> Cell_951         306.1119       1641.1277    Others # use dim(bg)[1] to check if the same number of cells are simulated.  # if not, increase `oversampling_rate` dim(bg)[1] #> [1] 5000"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-mixed-background","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulate an individual image","what":"Simulate mixed background","title":"spaSim vignette","text":"randomly assign ‘background cells’ specified cell identities specified proportions unstructured manner, spaSim includes simulate_mixing function. Users can use background image defined earlier (e.g. bg), image predefined package (bg1) ‘background cells’ construct mixed cell identities. example, use bg defined previous section. props argument defines proportions cell type idents. Although proportions specified, exact cells assigned identity stochastic. Therefore, users encouraged use set.seed() function ensure reproducibility.","code":"mix_bg <- simulate_mixing(bg_sample = bg,                           idents = c(\"Tumour\", \"Immune\", \"Others\"),                           props = c(0.2, 0.3, 0.5),                            plot_image = TRUE,                           plot_colours = c(\"red\",\"darkgreen\",\"lightgray\"))"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-clusters","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulate an individual image","what":"Simulate clusters","title":"spaSim vignette","text":"function aims simulate cells aggregate clusters like tumour clusters immune clusters. Tumour clusters can circles ovals (merging several ovals/circles together), immune clusters irregular (merging several irregular shapes together). First, specify properties clusters primary cell type, size, shape location. infiltrating cell types required, can also include properties. multiple cell types lying cluster (e.g. tumour cells infiltrating cells), assignment identities cells random, using random number sampling technique.  simulated image shows tumour cluster immune cluster mixed background image. primary cell type tumour cluster “Tumour”, “Immune1” “Others” cells also within tumour cluster. primary cell type immune cluster “Immune1”, “Immune2” “Others” cells also within immune cluster.","code":"cluster_properties <- list(   C1 =list(name_of_cluster_cell = \"Tumour\", size = 500, shape = \"Oval\",             centre_loc = data.frame(x = 600, y = 600),infiltration_types = c(\"Immune1\", \"Others\"),             infiltration_proportions = c(0.1, 0.05)),    C2 = list(name_of_cluster_cell = \"Immune1\", size = 600,  shape = \"Irregular\",              centre_loc = data.frame(x = 1500, y = 500), infiltration_types = c(\"Immune\", \"Others\"),             infiltration_proportions = c(0.1, 0.05))) # can use any defined image as background image, here we use mix_bg defined in the previous section clusters <- simulate_clusters(bg_sample = mix_bg,                               n_clusters = 2,                               bg_type = \"Others\",                               win = NULL,                               cluster_properties = cluster_properties,                               plot_image = TRUE,                               plot_categories = c(\"Tumour\" , \"Immune\", \"Immune1\", \"Others\"),                               plot_colours = c(\"red\", \"darkgreen\", \"darkblue\", \"lightgray\"))"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-immune-rings","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulate an individual image","what":"Simulate immune rings","title":"spaSim vignette","text":"function aims simulate tumour clusters immune ring surrounding clusters, represent immune cells excluded tumor margin. First, specify properties immune rings primary (inner cluster) secondary (outer ring) cell types, size, shape, width location. Properties cells infiltrating inner mass outer ring can also set. multiple cell types lying cluster immune ring, assignment identities cells random, using random number sampling technique.  spaSim also allows simulation two shapes overlapping . algorithm used make inner mass outer rings different shapes cohesive. example shown . Overlapping shapes also possible clusters double rings.","code":"immune_ring_properties <- list(   I1 = list(name_of_cluster_cell = \"Tumour\", size = 500,              shape = \"Circle\", centre_loc = data.frame(x = 930, y = 1000),              infiltration_types = c(\"Immune1\", \"Immune2\", \"Others\"),              infiltration_proportions = c(0.15, 0.05, 0.05),             name_of_ring_cell = \"Immune1\", immune_ring_width = 150,             immune_ring_infiltration_types = c(\"Immune2\", \"Others\"),              immune_ring_infiltration_proportions = c(0.1, 0.15))) rings <- simulate_immune_rings(   bg_sample = bg,   bg_type = \"Others\",   n_ir = 1,   win = NULL,   ir_properties = immune_ring_properties,   plot_image = TRUE,   plot_categories = c(\"Tumour\", \"Immune1\", \"Immune2\", \"Others\"),   plot_colours = c(\"red\", \"darkgreen\", \"darkblue\", \"lightgray\")) immune_ring_properties <- list(    I1 = list(name_of_cluster_cell = \"Tumour\", size = 500,              shape = \"Circle\", centre_loc = data.frame(x = 930, y = 1000),              infiltration_types = c(\"Immune1\", \"Immune2\", \"Others\"),              infiltration_proportions = c(0.15, 0.05, 0.05),             name_of_ring_cell = \"Immune1\", immune_ring_width = 150,             immune_ring_infiltration_types = c(\"Immune2\", \"Others\"),              immune_ring_infiltration_proportions = c(0.1, 0.15)),    I2 = list(name_of_cluster_cell = \"Tumour\", size = 400, shape = \"Oval\",            centre_loc = data.frame(x = 1330, y = 1100),             infiltration_types = c(\"Immune1\",  \"Immune2\", \"Others\"),             infiltration_proportions = c(0.15, 0.05, 0.05),            name_of_ring_cell = \"Immune1\", immune_ring_width = 150,            immune_ring_infiltration_types = c(\"Immune2\",\"Others\"),             immune_ring_infiltration_proportions = c(0.1, 0.15)))  rings <- simulate_immune_rings(bg_sample = bg,                               bg_type = \"Others\",                               n_ir = 2,                               win = NULL,                               ir_properties = immune_ring_properties,                               plot_image = TRUE,                               plot_categories = c(\"Tumour\", \"Immune1\", \"Immune2\", \"Others\"),                               plot_colours = c(\"red\", \"darkgreen\", \"darkblue\", \"lightgray\"))"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-double-rings","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulate an individual image","what":"Simulate double rings","title":"spaSim vignette","text":"function aims simulate tumour clusters inner ring (internal tumour margin) outer ring (external tumour margin). First, specify properties double rings primary (inner mass), secondary (inner ring), tertiary (outer ring) cell types, size, shape, width location. Properties cells infiltrating inner mass either ring can also set. multiple cell types lying tumour cluster double rings, assignment identities cells random, using random number sampling technique. Similar case, placing two double immune rings overlap form complex shape.  simulated image shows two layers immune rings. primary cell type inner ring (internal tumour margin) coloured green, “Tumour” cells also lie inner ring. outer ring (external tumour margin) coloured blue, “Others” cells also lie outer ring.","code":"double_ring_properties <- list(  I1 = list(name_of_cluster_cell = \"Tumour\", size = 300, shape = \"Circle\",             centre_loc = data.frame(x = 1000, y = 1000),             infiltration_types = c(\"Immune1\", \"Immune2\", \"Others\"),             infiltration_proportions = c(0.15, 0.05, 0.05),             name_of_ring_cell = \"Immune1\", immune_ring_width = 80,            immune_ring_infiltration_types = c(\"Tumour\", \"Others\"),             immune_ring_infiltration_proportions = c(0.1, 0.15),             name_of_double_ring_cell = \"Immune2\", double_ring_width = 100,            double_ring_infiltration_types = c(\"Others\"),             double_ring_infiltration_proportions = c( 0.15)),        I2 = list(name_of_cluster_cell = \"Tumour\", size = 300, shape = \"Oval\",            centre_loc = data.frame(x = 1200, y = 1200),             infiltration_types = c(\"Immune1\", \"Immune2\", \"Others\"),             infiltration_proportions = c(0.15, 0.05, 0.05),            name_of_ring_cell = \"Immune1\", immune_ring_width = 80,            immune_ring_infiltration_types = c(\"Tumour\",\"Others\"),             immune_ring_infiltration_proportions = c(0.1,0.15),             name_of_double_ring_cell = \"Immune2\", double_ring_width = 100,            double_ring_infiltration_types = c(\"Others\"),             double_ring_infiltration_proportions = c(0.15))) double_rings <- simulate_double_rings(bg_sample = bg1,                                      bg_type = \"Others\",                                      n_dr = 2,                                      win = NULL,                                      dr_properties = double_ring_properties,                                      plot_image = TRUE,                                      plot_categories = c(\"Tumour\", \"Immune1\", \"Immune2\", \"Others\"),                                      plot_colours = c(\"red\", \"darkgreen\", \"darkblue\", \"lightgray\"))"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-vessels","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulate an individual image","what":"Simulate vessels","title":"spaSim vignette","text":"function aims simulate stripes cells representing blood/lymphatic vessels. First, specify properties vessel structures number present, width, properties infiltrating cells. randomly assign ‘background cells’ lie within vessel structures specified cell identities specified proportions. locations vessels stochastic.","code":"properties_of_stripes = list(  S1 = list(number_of_stripes = 1, name_of_stripe_cell = \"Immune1\",             width_of_stripe = 40, infiltration_types = c(\"Others\"),            infiltration_proportions = c(0.08)),   S2 = list(number_of_stripes = 5, name_of_stripe_cell = \"Immune2\",             width_of_stripe = 40, infiltration_types = c(\"Others\"),             infiltration_proportions = c(0.08))) vessles <- simulate_stripes(bg_sample = bg1,                            n_stripe_type = 2,                            win = NULL,                            stripe_properties = properties_of_stripes,                            plot_image = TRUE)"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"displaying-the-sequential-construction-of-a-simulated-image","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulate an individual image","what":"Displaying the sequential construction of a simulated image","title":"spaSim vignette","text":"TIS (Tissue Image Simulator) function simulates multiple patterns layer layer displays pattern construction sequentially. patterns simulated order : background cells, mixed background cells, clusters (tumour/immune), immune rings, double immune rings, vessels. patterns required using function. pattern needed, simply use NULL pattern arguments. example simulates background sample tumour cluster immune ring (3 patterns: background image -> tumour cluster -> immune ring surrounding tumour cluster).   results display construction complex image multiple patterns. started background image cells identities, tumour cluster layered background image, finally, immune ring surrounds tumour cluster layered top.","code":"# First specify the cluster and immune ring properties ## tumour cluster properties properties_of_clusters = list(  C1 = list( name_of_cluster_cell = \"Tumour\", size = 300, shape = \"Oval\",              centre_loc = data.frame(\"x\" = 500, \"y\" = 500),             infiltration_types = c(\"Immune1\", \"Others\"),              infiltration_proportions = c(0.3, 0.05))) ## immune ring properties immune_ring_properties <- list(    I1 = list(name_of_cluster_cell = \"Tumour\", size = 300,              shape = \"Circle\", centre_loc = data.frame(x = 1030, y = 1100),              infiltration_types = c(\"Immune1\", \"Immune2\", \"Others\"),              infiltration_proportions = c(0.15, 0.05, 0.05),             name_of_ring_cell = \"Immune1\", immune_ring_width = 150,             immune_ring_infiltration_types = c(\"Others\"),              immune_ring_infiltration_proportions = c(0.15)),    I2 = list(name_of_cluster_cell = \"Tumour\", size = 200, shape = \"Oval\",            centre_loc = data.frame(x = 1430, y = 1400),             infiltration_types = c(\"Immune1\",  \"Immune2\", \"Others\"),             infiltration_proportions = c(0.15, 0.05, 0.05),            name_of_ring_cell = \"Immune1\", immune_ring_width = 150,            immune_ring_infiltration_types = c(\"Others\"),             immune_ring_infiltration_proportions = c(0.15))) # simulation # no background sample is input, TIS simulates the background cells from scratch # `n_cells`, `width`, `height`, `min_d` and `oversampling_rate` are parameters for simulating background cells # `n_clusters`, `properties_of_clusters` are parameters for simulating clusters on top of the background cells # `plot_image`, `plot_categories`, `plot_colours` are params for plotting simulated_image <-  TIS(bg_sample = NULL,    n_cells = 5000,    width = 2000,    height = 2000,    min_d = 10,    oversampling_rate = 1.6,     n_clusters = 1,    properties_of_clusters = properties_of_clusters,    n_immune_rings = 2,    properties_of_immune_rings = immune_ring_properties,    plot_image = TRUE,    plot_categories = c(\"Tumour\", \"Immune1\", \"Immune2\", \"Others\"),    plot_colours = c(\"red\", \"darkgreen\", \"darkblue\", \"lightgray\")) #> [1] \"Immune2 cells were not found and not plotted\""},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulating-a-range-of-multiple-images","dir":"Articles","previous_headings":"Quick start to using spaSim","what":"Simulating a range of multiple images","title":"spaSim vignette","text":"cases simulations set images span range different properties patterns needed. Rather simulating images individually, simulating images one go desirable. following functions create quick interface generate range images different parameters/randomised elements.","code":""},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-multiple-background-images-multiple-cell-types-with-different-proportions-of-cell-types-","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulating a range of multiple images","what":"Simulate multiple background images (multiple cell types) with different proportions of cell types.","title":"spaSim vignette","text":"function aims simulate set images contain different proportions specified cell types. example simulate 4 images 10% Tumour cells increasing number Immune cells. first specify cell types proportions cell type image.","code":"#cell types present in each image idents <- c(\"Tumour\", \"Immune\", \"Others\") # Each vector corresponds to each cell type in `idents`.  # Each element in each vector is the proportion of the cell type in each image. # (4 images, so 4 elements in each vector) Tumour_prop <- rep(0.1, 4) Immune_prop <- seq(0, 0.3, 0.1) Others_prop <- seq(0.9, 0.6, -0.1) # put the proportion vectors in a list prop_list <- list(Tumour_prop, Immune_prop, Others_prop)  # simulate  bg_list <-   multiple_background_images(bg_sample = bg, idents = idents, props = prop_list,                             plot_image = TRUE, plot_colours = c(\"red\", \"darkgreen\", \"lightgray\")) #> [1] 1 #> [1] \"Immune cells were not found and not plotted\" #> [1] 2 #> [1] 3 #> [1] 4"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-multiple-images-with-clusters-of-different-properties-","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulating a range of multiple images","what":"Simulate multiple images with clusters of different properties.","title":"spaSim vignette","text":"function aims simulate set images contain different tumour/immune clusters. Note function users manually define base shape primary cell type clusters. three options (1, 2, 3) base shape available cluster_shape argument. 1 simple cluster cells “Tumour”, 2 tumour cluster primary cell type “Tumour” infiltration types “Immune” “Others”, 3 immune cluster primary cell type “Immune” infiltration cell types “Immune1” “Others”. simulate 4 images increasing tumour cluster sizes using cluster shape 1.  also include one example shape 2 one example shape 3.","code":"# if a property is fixed, use a number for that parameter. # if a property spans a range, use a numeric vector for that parameter, e.g. range_of_size <- seq(200, 500, 100) cluster_list <-   multiple_images_with_clusters(bg_sample = bg1,                                cluster_shape = 1,                                prop_infiltration = 0.1,                                cluster_size = range_of_size,                                cluster_loc_x = 0,                                cluster_loc_y = 0,                                plot_image = TRUE,                                plot_categories = c(\"Tumour\", \"Immune\", \"Others\"),                                plot_colours = c(\"red\", \"darkgreen\", \"lightgray\")) # shape \"2\" - Tumour cluster with more and more immune infiltration range_of_infiltration <- c(0.1, 0.3, 0.5) cluster_list <-    multiple_images_with_clusters(bg_sample = bg1,                                 cluster_shape = 2,                                 prop_infiltration = range_of_infiltration,                                 cluster_size = 200,                                 cluster_loc_x = 0,                                 cluster_loc_y = 0,                                 plot_image = TRUE,                                  plot_categories = c(\"Tumour\" , \"Immune\", \"Others\"),                                 plot_colours = c(\"red\",\"darkgreen\", \"lightgray\")) # shape \"3\" - Immune cluster cluster_list <-    multiple_images_with_clusters(bg_sample = bg1,                                  cluster_shape = 3,                                  prop_infiltration = 0.1,                                  cluster_size = 500,                                  cluster_loc_x = 0,                                  cluster_loc_y = 0,                                  plot_image = TRUE,                                   plot_categories = c(\"Immune\", \"Others\"),                                  plot_colours = c(\"darkgreen\", \"lightgray\"))"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"simulate-multiple-images-with-immune-rings-of-different-properties","dir":"Articles","previous_headings":"Quick start to using spaSim > Simulating a range of multiple images","what":"Simulate multiple images with immune rings of different properties","title":"spaSim vignette","text":"function aims simulate set images contain different tumour clusters immune rings. Note similar multiple_images_with_clusters, function users manually define base shape primary cell type clusters immune rings. three options base shape (1, 2 3) available ring_shape argument: 1 2: - primary cluster cell type “Tumour” - cluster infiltration cell types “Immune” “Others” - primary ring cell type “Immune” - ring infiltration type “Others” 3: - primary cluster cell type “Tumour” - cluster infiltration cell types “Immune” “Others” - primary ring cell type “Immune” - ring infiltration type “Tumour” “Others” cluster size, infiltration proportions, cluster location, ring width, ring infiltration proportions can defined. show 3 images increasingly wider immune rings. First define parameter range.  also include one example ring shape 2 one example ring shape 3.","code":"# if a property is to be fixed, use a number for that parameter. # if a property is to span a range, use a numeric vector for that parameter, e.g. range_ring_width <- seq(50, 120, 30)  # This example uses ring shape 1 par(mfrow=c(2,1)) immune_ring_list <-   multiple_images_with_immune_rings(bg_sample = bg,                                    cluster_size = 200,                                    ring_shape = 1,                                    prop_infiltration = 0,                                    ring_width = range_ring_width,                                    cluster_loc_x = 0,                                    cluster_loc_y = 0,                                    prop_ring_infiltration = 0.1,                                    plot_image = TRUE,                                    plot_categories = c(\"Tumour\", \"Immune\", \"Others\"),                                    plot_colours = c(\"red\", \"darkgreen\", \"lightgray\")) # shape \"2\" - Immune ring at different locations cluster_loc_x <- c(-300, 0, 300) cluster_loc_y <- c(-300, 0, 300) immune_ring_list <-   multiple_images_with_immune_rings(bg_sample = bg,                                    cluster_size = 200,                                    ring_shape = 2,                                    prop_infiltration = 0,                                    ring_width = 70,                                    cluster_loc_x = cluster_loc_x,                                    cluster_loc_y = cluster_loc_y,                                    prop_ring_infiltration = 0.1,                                    plot_image = TRUE,                                    plot_categories = c(\"Tumour\", \"Immune\", \"Others\"),                                    plot_colours = c(\"red\", \"darkgreen\", \"lightgray\")) # shape \"3\" - Immune ring has different \"Tumour\" proportions prop_ring_infiltration <- c(0.1, 0.2, 0.3) immune_ring_list <-   multiple_images_with_immune_rings(bg_sample = bg,                                    cluster_size = 200,                                    ring_shape = 2,                                    prop_infiltration = 0,                                    ring_width = 70,                                    cluster_loc_x = 0,                                    cluster_loc_y = 0,                                    prop_ring_infiltration = prop_ring_infiltration,                                    plot_image = TRUE,                                    plot_categories = c(\"Tumour\", \"Immune\", \"Others\"),                                    plot_colours = c(\"red\", \"darkgreen\", \"lightgray\"))"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"input-simulated-images-into-spiat-package-","dir":"Articles","previous_headings":"Quick start to using spaSim","what":"Input simulated images into SPIAT package.","title":"spaSim vignette","text":"SPIAT uses SingleCellExperiment object basic data structure image processing analysis, simulated images spaSim can directly used input SPIAT functions. Examples SPIAT packages use images simulated spaSim. example using SPIAT function spaSim image. use simulated_image generated one previous sections.","code":"# The following code will not run as SPIAT is still not released yet. You can try out the dev version on Github~ # if (requireNamespace(\"SPIAT\", quietly = TRUE)) { #   # visualise #   SPIAT::plot_cell_categories(sce_object = simulated_image,  #                               categories_of_interest = c(\"Tumour\", \"Immune1\", \"Immune2\", \"Others\"), #                               colour_vector = c(\"red\", \"darkgreen\", \"darkblue\", \"lightgray\"), #                               feature_colname = \"Phenotype\") #   # calculate average minimum distance of the cells #   SPIAT::average_minimum_distance(sce_object = simulated_image) #   # You can also try other functions :) # }"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"spaSim vignette","text":"example can cite package. spaSim (Feng Trigos, 2022)","code":""},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"spaSim vignette","text":"spaSim package (Feng Trigos, 2022) made possible thanks : R (R Core Team, 2022) BiocStyle (Oleś, 2021) knitr (Xie, 2022) RefManageR (McLean, 2017) rmarkdown (Allaire, Xie, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2022) sessioninfo (Wickham, Chang, Flight, Müller, Hester, 2021) testthat (Wickham, 2011) package developed using biocthis. Code creating vignette Date vignette generated. Wallclock time spent generating vignette. R session information.","code":"## Create the vignette library(\"rmarkdown\") system.time(render(\"vignette.Rmd\", \"BiocStyle::html_document\")) ## Extract the R code library(\"knitr\") knit(\"vignette.Rmd\", tangle = TRUE) #> [1] \"2022-04-26 12:08:30 UTC\" #> Time difference of 1.602 mins #> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.2.0 (2022-04-22) #>  os       Ubuntu 20.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2022-04-26 #>  pandoc   2.7.3 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package              * version  date (UTC) lib source #>  Biobase                2.55.2   2022-04-07 [1] Bioconductor #>  BiocGenerics           0.41.2   2021-11-15 [1] Bioconductor #>  BiocManager            1.30.17  2022-04-22 [1] RSPM #>  BiocStyle            * 2.23.1   2021-12-17 [1] Bioconductor #>  bitops                 1.0-7    2021-04-24 [1] RSPM #>  bookdown               0.26     2022-04-15 [1] RSPM #>  bslib                  0.3.1    2021-10-06 [1] RSPM #>  cachem                 1.0.6    2021-08-19 [1] RSPM #>  cli                    3.3.0    2022-04-25 [1] CRAN (R 4.2.0) #>  colorspace             2.0-3    2022-02-21 [1] RSPM #>  crayon                 1.5.1    2022-03-26 [1] RSPM #>  DelayedArray           0.21.2   2021-11-16 [1] Bioconductor #>  deldir                 1.0-6    2021-10-23 [1] RSPM #>  desc                   1.4.1    2022-03-06 [1] RSPM #>  digest                 0.6.29   2021-12-01 [1] RSPM #>  dplyr                  1.0.8    2022-02-08 [1] RSPM #>  ellipsis               0.3.2    2021-04-29 [1] RSPM #>  evaluate               0.15     2022-02-18 [1] RSPM #>  fansi                  1.0.3    2022-03-24 [1] RSPM #>  farver                 2.1.0    2021-02-28 [1] RSPM #>  fastmap                1.1.0    2021-01-25 [1] RSPM #>  fs                     1.5.2    2021-12-08 [1] RSPM #>  generics               0.1.2    2022-01-31 [1] RSPM #>  GenomeInfoDb           1.31.10  2022-04-21 [1] Bioconductor #>  GenomeInfoDbData       1.2.8    2022-04-26 [1] Bioconductor #>  GenomicRanges          1.47.6   2022-01-12 [1] Bioconductor #>  ggplot2                3.3.5    2021-06-25 [1] RSPM #>  glue                   1.6.2    2022-02-24 [1] RSPM #>  gtable                 0.3.0    2019-03-25 [1] RSPM #>  highr                  0.9      2021-04-16 [1] RSPM #>  htmltools              0.5.2    2021-08-25 [1] RSPM #>  httr                   1.4.2    2020-07-20 [1] RSPM #>  IRanges                2.29.1   2021-11-16 [1] Bioconductor #>  jquerylib              0.1.4    2021-04-26 [1] RSPM #>  jsonlite               1.8.0    2022-02-22 [1] RSPM #>  knitr                  1.38     2022-03-25 [1] RSPM #>  labeling               0.4.2    2020-10-20 [1] RSPM #>  lattice                0.20-45  2021-09-22 [2] CRAN (R 4.2.0) #>  lifecycle              1.0.1    2021-09-24 [1] RSPM #>  lubridate              1.8.0    2021-10-07 [1] RSPM #>  magrittr               2.0.3    2022-03-30 [1] RSPM #>  Matrix                 1.4-1    2022-03-23 [2] CRAN (R 4.2.0) #>  MatrixGenerics         1.7.0    2021-10-26 [1] Bioconductor #>  matrixStats            0.62.0   2022-04-19 [1] RSPM #>  memoise                2.0.1    2021-11-26 [1] RSPM #>  munsell                0.5.0    2018-06-12 [1] RSPM #>  pillar                 1.7.0    2022-02-01 [1] RSPM #>  pkgconfig              2.0.3    2019-09-22 [1] RSPM #>  pkgdown                2.0.3    2022-04-24 [1] RSPM #>  plyr                   1.8.7    2022-03-24 [1] RSPM #>  polyclip               1.10-0   2019-03-14 [1] RSPM #>  purrr                  0.3.4    2020-04-17 [1] RSPM #>  R6                     2.5.1    2021-08-19 [1] RSPM #>  ragg                   1.2.2    2022-02-21 [1] RSPM #>  Rcpp                   1.0.8.3  2022-03-17 [1] RSPM #>  RCurl                  1.98-1.6 2022-02-08 [1] RSPM #>  RefManageR           * 1.3.0    2020-11-13 [1] RSPM #>  rlang                  1.0.2    2022-03-04 [1] RSPM #>  rmarkdown              2.14     2022-04-25 [1] CRAN (R 4.2.0) #>  rprojroot              2.0.3    2022-04-02 [1] RSPM #>  S4Vectors              0.33.17  2022-04-06 [1] Bioconductor #>  sass                   0.4.1    2022-03-23 [1] RSPM #>  scales                 1.2.0    2022-04-13 [1] RSPM #>  sessioninfo          * 1.2.2    2021-12-06 [1] RSPM #>  SingleCellExperiment   1.17.2   2021-11-18 [1] Bioconductor #>  spaSim               * 0.99.1   2022-04-26 [1] local #>  spatstat.data          2.2-0    2022-04-18 [1] RSPM #>  spatstat.geom          2.4-0    2022-03-29 [1] RSPM #>  spatstat.random        2.2-0    2022-03-30 [1] RSPM #>  spatstat.utils         2.3-0    2021-12-12 [1] RSPM #>  stringi                1.7.6    2021-11-29 [1] RSPM #>  stringr                1.4.0    2019-02-10 [1] RSPM #>  SummarizedExperiment   1.25.3   2021-12-08 [1] Bioconductor #>  systemfonts            1.0.4    2022-02-11 [1] RSPM #>  textshaping            0.3.6    2021-10-13 [1] RSPM #>  tibble                 3.1.6    2021-11-07 [1] RSPM #>  tidyselect             1.1.2    2022-02-21 [1] RSPM #>  utf8                   1.2.2    2021-07-24 [1] RSPM #>  vctrs                  0.4.1    2022-04-13 [1] RSPM #>  xfun                   0.30     2022-03-02 [1] RSPM #>  xml2                   1.3.3    2021-11-30 [1] RSPM #>  XVector                0.35.0   2021-10-26 [1] Bioconductor #>  yaml                   2.3.5    2022-02-21 [1] RSPM #>  zlibbioc               1.41.0   2021-10-26 [1] Bioconductor #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.2.0/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://trigosteam.github.io/spaSim/articles/vignette.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"spaSim vignette","text":"vignette generated using BiocStyle (Oleś, 2021) knitr (Xie, 2022) rmarkdown (Allaire, Xie, McPherson, et al., 2022) running behind scenes.Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, J. McPherson, et al. rmarkdown: Dynamic Documents R. R package version 2.14. 2022. URL: https://github.com/rstudio/rmarkdown. [2] Y. Feng . Trigos. spaSim: Spatial point data simulator tissue images. R package version 0.99.1. 2022. URL: https://trigosteam.github.io/spaSim/. [3] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [4] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.23.1. 2021. URL: https://github.com/Bioconductor/BiocStyle. [5] R Core Team. R: Language Environment Statistical Computing. R Foundation Statistical Computing. Vienna, Austria, 2022. URL: https://www.R-project.org/. [6] H. Wickham. “testthat: Get Started Testing”. : R Journal 3 (2011), pp. 5–10. URL: https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf. [7] H. Wickham, W. Chang, R. Flight, et al. sessioninfo: R Session Information. https://github.com/r-lib/sessioninfo#readme, https://r-lib.github.io/sessioninfo/. 2021. [8] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.38. 2022. URL: https://yihui.org/knitr/.","code":""},{"path":"https://trigosteam.github.io/spaSim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yuzhou Feng. Author, maintainer. Anna Trigos. Author.","code":""},{"path":"https://trigosteam.github.io/spaSim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Feng Y, Trigos (2022). spaSim: Spatial point data simulator tissue images. R package version 0.99.1, https://trigosteam.github.io/spaSim/.","code":"@Manual{,   title = {spaSim: Spatial point data simulator for tissue images},   author = {Yuzhou Feng and Anna Trigos},   year = {2022},   note = {R package version 0.99.1},   url = {https://trigosteam.github.io/spaSim/}, }"},{"path":"https://trigosteam.github.io/spaSim/index.html","id":"spasim","dir":"","previous_headings":"","what":"Spatial point data simulator for tissue images","title":"Spatial point data simulator for tissue images","text":"goal spaSim (spatial Simulator) facilitate tissue image simulations! simulates cells 2D locations (point data) cell types tissue. available patterns include background cells, cell clusters, immune cell rings vessels. also enables simulations generate set images one run! quantitative tools spatial tissue image analysis developed need benchmarking, simulations spaSim can applied test benchmark tools metrics. output spaSim images SingleCellExperiment object format can used SPIAT. SPIAT (Spatial Image Analysis Tissues) also developed team.","code":""},{"path":"https://trigosteam.github.io/spaSim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial point data simulator for tissue images","text":"install package, start R enter: can install development version spaSim like :","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  # The following initializes usage of Bioc devel BiocManager::install(version='devel')  BiocManager::install(\"spaSim\") install.packages(\"devtools\") devtools::install_github(\"TrigosTeam/spaSim\")"},{"path":"https://trigosteam.github.io/spaSim/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Spatial point data simulator for tissue images","text":"vignette overview package can accessed top Menu Articles clicking .","code":""},{"path":"https://trigosteam.github.io/spaSim/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Spatial point data simulator for tissue images","text":"basic example shows simulate background cells multiple cell types different proportions.","code":"library(spaSim) set.seed(610) mix_background <- TIS(n_cells = 5000, width = 2000, height = 2000, min_d = 10,                       names_of_bg_cells = c(\"Tumour\",\"Immune\",\"Others\"),                       proportions_of_bg_cells = c(0.1, 0.2, 0.7),                       plot_image = TRUE)"},{"path":"https://trigosteam.github.io/spaSim/index.html","id":"creators","dir":"","previous_headings":"","what":"Creators","title":"Spatial point data simulator for tissue images","text":"spaSim created, designed implemented Yuzhou Feng. Anna Trigos provided supervision guidance.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/TIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Tissue Image Simulator (TIS) — TIS","title":"Tissue Image Simulator (TIS) — TIS","text":"Tissue Image Simulator (TIS) integrates basic simulation functions spaSim, including simulating (mixed) background image, clusters, immune rings, double immune rings stripes. patterns simulated separate layers sequentially (e.g. immune rings simulated /top background cells). layer also plot sequentially. Pattern properties (e.g. properties_of_clusters) contain properties pattern format list element one pattern. properties need manually defined. Details format properties see examples simulate_clusters simulate_immune_rings simulate_double_rings simulate_stripes","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/TIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tissue Image Simulator (TIS) — TIS","text":"","code":"TIS(   bg_sample = NULL,   n_cells = NULL,   width = NULL,   height = NULL,   min_d = NULL,   oversampling_rate = 1.2,   names_of_bg_cells = NULL,   proportions_of_bg_cells = NULL,   n_clusters = NULL,   properties_of_clusters = NULL,   n_immune_rings = NULL,   properties_of_immune_rings = NULL,   n_double_rings = NULL,   properties_of_double_rings = NULL,   n_stripe_type = NULL,   properties_of_stripes = NULL,   image_name = NULL,   plot_image = FALSE,   plot_categories = NULL,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/TIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tissue Image Simulator (TIS) — TIS","text":"bg_sample (OPTIONAL) data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. n_cells (OPTIONAL) Number background cells simulate. bg_sample NULL. width (OPTIONAL) Number width image. height (OPTIONAL) Number height image. min_d (OPTIONAL) Number minimum distance two cells. oversampling_rate (OPTIONAL) Numeric. multiplier oversampling. Without oversampling, simulation deletes cells within min_d , resulting less total number cells n_cells. Default 1.2 (set based n_cells min_d; always larger 1). names_of_bg_cells (OPTIONAL) Vector cell types background cells. NULL, background cells one type. proportions_of_bg_cells (OPTIONAL) Vector corresponding proportion cell type background cells. n_clusters (OPTIONAL) Number cell clusters. NULL, clusters simulate. properties_of_clusters (OPTIONAL) List parameters define clusters. n_immune_rings (OPTIONAL) Number immune rings. NULL, immune rings simulate. properties_of_immune_rings (OPTIONAL) List parameters define immune rings. n_double_rings (OPTIONAL) Number double immune rings. NULL, double rings simulate. properties_of_double_rings (OPTIONAL) List parameters define double immune rings. n_stripe_type (OPTIONAL) Number stripe (vessel) types. NULL, stripes simulate. properties_of_stripes (OPTIONAL) List parameters define stripes. image_name (OPTIONAL) String name output tissue image. plot_image Boolean. Whether simulated image plotted. plot_categories String Vector specifying order cell categories plotted. Default NULL - cell categories \"Phenotype\" column used plotting. plot_colours String Vector specifying order colours correspond plot_categories arg. Default NULL - predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/TIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tissue Image Simulator (TIS) — TIS","text":"sce object simulated image","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/TIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tissue Image Simulator (TIS) — TIS","text":"","code":"set.seed(610) double_ring_image <- TIS(bg_sample=bg1, n_clusters=1, properties_of_clusters=list(C1=list( name_of_cluster_cell=\"Tumour\", size=300, shape=\"Oval\", centre_loc=data.frame(\"x\"=500, \"y\"=500), infiltration_types=c(\"Immune1\", \"Others\"), infiltration_proportions=c(0.1, 0.05))), plot_image=TRUE)"},{"path":"https://trigosteam.github.io/spaSim/reference/bg1.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe of background cells 2000*2000. — bg1","title":"Dataframe of background cells 2000*2000. — bg1","text":"data frame containing 4915 background cells 2000 2000 size window","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/bg1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataframe of background cells 2000*2000. — bg1","text":"","code":"bg1"},{"path":"https://trigosteam.github.io/spaSim/reference/bg1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataframe of background cells 2000*2000. — bg1","text":"data frame 4915 rows (cells) 3 columns: Cell.X.Position X coordinate Cell.Y.Position Y coordinate Phenotype cell type","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/format_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"format_sce — format_sce","title":"format_sce — format_sce","text":"Format data frame object SingleCellExperiment class object count assay empty.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/format_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format_sce — format_sce","text":"","code":"format_sce(data)"},{"path":"https://trigosteam.github.io/spaSim/reference/format_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format_sce — format_sce","text":"data data frame row contains information cell. columns data frame become colData SingleCellExperiment object.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/format_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"format_sce — format_sce","text":"SingleCellExperiment object","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_background_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate multiple background images (mixed cell types) — multiple_background_images","title":"Simulate multiple background images (mixed cell types) — multiple_background_images","text":"Generate set background images different proportions mixed cell types . default values arguments give example multiple image simulation enable automatic multiple image simulation without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_background_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate multiple background images (mixed cell types) — multiple_background_images","text":"","code":"multiple_background_images(   bg_sample = bg1,   idents = c(\"Tumour\", \"Immune\", \"Others\"),   props = list(rep(0.1, 9), seq(0, 0.4, 0.05), seq(0.9, 0.5, -0.05)),   plot_image = TRUE,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_background_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate multiple background images (mixed cell types) — multiple_background_images","text":"bg_sample data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. idents String Vector. Names cell types generate. props List. element vector proportions corresponding cell type. length vector many images generate. vectors length, also equal number images. plot_image Boolean. Whether plot simulated images . Default TRUE. plot_colours String Vector. plot_image TRUE, param corresponding colours idents arg. Default NULL, predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_background_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate multiple background images (mixed cell types) — multiple_background_images","text":"list SCE objects","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_background_images.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate multiple background images (mixed cell types) — multiple_background_images","text":"","code":"idents = c(\"Tumour\",\"Immune\",\"Others\") prop1 <- rep(0.1,9) prop2 <- seq(0, 0.4, 0.05) prop3 <- seq(0.9,0.5,-0.05) set.seed(610) bg_image_list <- multiple_background_images(bg_sample = bg1, idents = idents, props = list(prop1, prop2, prop3), plot_image = FALSE) #> [1] 1 #> [1] 2 #> [1] 3 #> [1] 4 #> [1] 5 #> [1] 6 #> [1] 7 #> [1] 8 #> [1] 9"},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate multiple images with clusters — multiple_images_with_clusters","title":"Simulate multiple images with clusters — multiple_images_with_clusters","text":"Generate set images different cluster properties. Trying default parameters recommended understanding function. default values arguments give example multiple image simulation enable automatic multiple image simulation without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate multiple images with clusters — multiple_images_with_clusters","text":"","code":"multiple_images_with_clusters(   bg_sample = bg1,   cluster_shape = 2,   prop_infiltration = 0.1,   cluster_size = seq(200, 1000, 100),   cluster_loc_x = 0,   cluster_loc_y = 0,   plot_image = TRUE,   plot_categories = NULL,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate multiple images with clusters — multiple_images_with_clusters","text":"bg_sample data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. cluster_shape Number. Choose one following pre-designed shapes (1 2 tumour cluster 3 immune cluster). pre-designed shape contains information cell names cluster, infiltration cell types, proportions infiltration, cluster size, cluster centre locations. order simulate set images, use arguments specify ranges properties. predefined cell types can changed, users can change manually simulation. prop_infiltration Numeric Vector. degree infiltration. numeric, simulated images infiltration degree. vector, images range different infiltration proportions simulated. cluster_size Numeric Vector. size cluster. numeric, simulated images cluster size. vector, images range different cluster sizes simulated. size exceed limit image sides. cluster_loc_x Numeric Vector. X location cluster center offset. numeric, simulated images center X location. vector, images range different center locations simulated. cluster_loc_y Numeric Vector length cluster_loc_x. Y location cluster center offset. plot_image Boolean Whether plot simulated images .Default TRUE. plot_categories String Vector specifying order cell categories plotted. Default NULL - cell categories \"Phenotype\" column used plotting. plot_colours String Vector specifying order colours correspond plot_categories arg. Default NULL - predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate multiple images with clusters — multiple_images_with_clusters","text":"list SCE objects","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate multiple images with clusters — multiple_images_with_clusters","text":"","code":"set.seed(610) cluster_image_list <- multiple_images_with_clusters(bg_sample=bg1, cluster_shape=2, prop_infiltration=0.1, cluster_size = seq(200,1000,100), cluster_loc_x = 0, cluster_loc_y = 0, plot_image = TRUE)"},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_immune_rings.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate multiple images with immune rings — multiple_images_with_immune_rings","title":"Simulate multiple images with immune rings — multiple_images_with_immune_rings","text":"Generate set images different immune ring properties. default values arguments give example multiple image simulation enable automatic multiple image simulation without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_immune_rings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate multiple images with immune rings — multiple_images_with_immune_rings","text":"","code":"multiple_images_with_immune_rings(   bg_sample = bg1,   cluster_size = 200,   ring_shape = 1,   prop_infiltration = 0,   ring_width = seq(50, 100, 10),   cluster_loc_x = 0,   cluster_loc_y = 0,   prop_ring_infiltration = seq(0, 0.2, 0.05),   plot_image = TRUE,   plot_categories = NULL,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_immune_rings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate multiple images with immune rings — multiple_images_with_immune_rings","text":"bg_sample data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. cluster_size Numeric Vector. size cluster. numeric, simulated images cluster size. vector, images range different cluster sizes simulated. size exceed limit image sides. ring_shape Number. Choose one following pre-designed shapes (1,2 3). pre-designed shape contains information cell names cluster, infiltration cell types, proportions infiltration, cluster size, ring width, proportions infiltrated cells immune rings cluster centre locations. order simulate set images, use arguments specify ranges properties. predefined cell types can changed, users can change manually simulation. prop_infiltration Numeric Vector. degree infiltration. numeric, simulated images infiltration degree. vector, images range different infiltration proportions simulated. ring_width Numeric Vector. width immune ring. numeric, simulated images ring width. vector, images range different ring widths simulated. cluster_loc_x Numeric Vector. X location cluster center offset. numeric, simulated images center X location. vector, images range different center locations simulated. cluster_loc_y Numeric Vector length cluster_loc_x. Y location cluster center offset. prop_ring_infiltration Numeric Vector. degree tumour infiltration region immune rings. plot_image Boolean Whether plot simulated images .Default TRUE. plot_categories String Vector specifying order cell cateories plotted. Default NULL - cell categories \"Phenotype\" column used plotting. plot_colours String Vector specifying order colours correspond plot_categories arg. Default NULL - predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_immune_rings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate multiple images with immune rings — multiple_images_with_immune_rings","text":"list sce objects","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/multiple_images_with_immune_rings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate multiple images with immune rings — multiple_images_with_immune_rings","text":"","code":"set.seed(610) ring_image_list <- multiple_images_with_immune_rings(bg_sample = bg1, ring_shape = 1, prop_infiltration = 0, ring_width = seq(50,100,10), cluster_size = 200, cluster_loc_x = 0, cluster_loc_y = 0, prop_ring_infiltration = seq(0, 0.2,0.05), plot_image = TRUE)"},{"path":"https://trigosteam.github.io/spaSim/reference/plot_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_cells — plot_cells","title":"plot_cells — plot_cells","text":"Produces scatter plot cells tissue. Cells coloured categorically Phenotype column. Cell categories specified coloured \"lightgrey\" labled \"Unspecified\".","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/plot_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_cells — plot_cells","text":"","code":"plot_cells(   sce_object,   categories_of_interest = NULL,   colour_vector = NULL,   feature_colname = \"Phenotype\" )"},{"path":"https://trigosteam.github.io/spaSim/reference/plot_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_cells — plot_cells","text":"sce_object SingleCellExperiment object data.frame cell locations phenotype info. categories_of_interest String Vector cell categories coloured. colour_vector String Vector specifying colours cell phenotype. feature_colname String specifying column cell categories belong .","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/plot_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_cells — plot_cells","text":"plot returned","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_background_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate background cells — simulate_background_cells","title":"Simulate background cells — simulate_background_cells","text":"Simulate cell locations. 2D locations cells simulated plotted rectangular window. Users can specify window size, cell number minimum distance two cells. cells \"Phenotype\", specified \"Phenotype\" param. function uses rHardcore spatstat.random.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_background_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate background cells — simulate_background_cells","text":"","code":"simulate_background_cells(   n_cells,   width,   height,   min_d,   oversampling_rate = 1.2,   Phenotype = \"Others\" )"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_background_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate background cells — simulate_background_cells","text":"n_cells Numeric. Number cells simulate background. width, height Numeric. width height image. min_d Numeric. minimum distance two cells. oversampling_rate (OPTIONAL) Numeric. multiplier oversampling. Without oversampling, simulation deletes cells within min_d , resulting less total number cells n_cells. Default 1.2 (set based n_cells min_d; always larger 1). Phenotype (OPTIONAL) String. name background cell type. Default \"Others\" since identity background cells.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_background_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate background cells — simulate_background_cells","text":"data.frame simulated background image","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_background_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate background cells — simulate_background_cells","text":"","code":"set.seed(610) # set seed for this background image simulation for reproducibility background_image <- simulate_background_cells(n_cells = 5000, width = 2000,                                               height = 2000, min_d = 10,                                               oversampling_rate = 1.5, Phenotype = \"Others\")"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate clusters — simulate_clusters","title":"Simulate clusters — simulate_clusters","text":"Based existing background image, simulate clusters cells type cells aggregate. default values arguments give example cluster simulation enable automatic simulation clusters without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate clusters — simulate_clusters","text":"","code":"simulate_clusters(   bg_sample = bg1,   n_clusters = 2,   bg_type = \"Others\",   win = NULL,   cluster_properties = list(C1 = list(name_of_cluster_cell = \"Tumour\", size = 300,     shape = \"Oval\", centre_loc = data.frame(x = 500, y = 500), infiltration_types =     c(\"Immune1\", \"Others\"), infiltration_proportions = c(0.1, 0.05)), C2 =     list(name_of_cluster_cell = \"Immune1\", size = 500, shape = \"Irregular\", centre_loc =     data.frame(x = 1500, y = 500), infiltration_types = c(\"Immune2\", \"Others\"),     infiltration_proportions = c(0.1, 0.05))),   plot_image = TRUE,   plot_categories = NULL,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate clusters — simulate_clusters","text":"bg_sample (OPTIONAL) data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. n_clusters Numeric. Number clusters. must match length(cluster_properties). bg_type (OPTIONAL) String. name background cell type background sample \"Phenotype\" column. default \"Others\". win (OPTIONAL) owin object output spatstat.geom::owin function. default window background image. cluster_properties List properties clusters. See examples format arg. plot_image Boolean. Whether simulated image plotted. plot_categories String Vector specifying order cell categories plotted. Default NULL - cell categories \"Phenotype\" column used plotting. plot_colours String Vector specifying order colours correspond plot_categories arg. Default NULL - predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate clusters — simulate_clusters","text":"data.frame simulated image","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate clusters — simulate_clusters","text":"","code":"set.seed(610) cluster_image <- simulate_clusters(bg_sample = bg1, n_clusters=2, cluster_properties=list(C1=list(name_of_cluster_cell=\"Tumour\", size=300, shape=\"Oval\", centre_loc=data.frame(\"x\"=500, \"y\"=500), infiltration_types=c(\"Immune1\", \"Others\"), infiltration_proportions=c(0.1, 0.05)), C2=list(name_of_cluster_cell=\"Immune1\", size=500, shape=\"Irregular\", centre_loc=data.frame(\"x\"=1500,\"y\"=500), infiltration_types=c(\"Immune2\", \"Others\"), infiltration_proportions=c(0.1, 0.05))))"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_double_rings.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate double immune rings — simulate_double_rings","title":"Simulate double immune rings — simulate_double_rings","text":"Based existing background image, simulate double rings immune cells surround tumour clusters. inner ring internal margin tumour cluster. outer ring external tumour margin. tumour clusters double immune rings simulated time. default values arguments give example double ring simulation enable automatic simulation double rings without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_double_rings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate double immune rings — simulate_double_rings","text":"","code":"simulate_double_rings(   bg_sample = bg1,   bg_type = \"Others\",   n_dr = 2,   win = NULL,   dr_properties = list(D1 = list(name_of_cluster_cell = \"Tumour\", size = 300, shape =     \"Circle\", centre_loc = data.frame(x = 1000, y = 1000), infiltration_types =     c(\"Immune1\", \"Immune2\", \"Others\"), infiltration_proportions = c(0.15, 0.05, 0.05),     name_of_ring_cell = \"Immune1\", immune_ring_width = 150,     immune_ring_infiltration_types = c(\"Others\"), immune_ring_infiltration_proportions =     c(0.15), name_of_double_ring_cell = \"Immune2\", double_ring_width = 100,     double_ring_infiltration_types = c(\"Others\"), double_ring_infiltration_proportions =     c(0.15)),      D2 = list(name_of_cluster_cell = \"Tumour\", size = 300, shape = \"Oval\",     centre_loc = data.frame(x = 1200, y = 1200), infiltration_types = c(\"Immune1\",     \"Immune2\", \"Others\"), infiltration_proportions = c(0.15, 0.05, 0.05),     name_of_ring_cell = \"Immune1\", immune_ring_width = 150,     immune_ring_infiltration_types = c(\"Others\"), immune_ring_infiltration_proportions =     c(0.15), name_of_double_ring_cell = \"Immune2\", double_ring_width = 100,     double_ring_infiltration_types = c(\"Others\"), double_ring_infiltration_proportions =     c(0.15))),   plot_image = TRUE,   plot_categories = NULL,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_double_rings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate double immune rings — simulate_double_rings","text":"bg_sample (OPTIONAL) data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. bg_type (OPTIONAL) String name background cell type. default \"Others\". n_dr Number double immune rings. must match length(dr_properties). win (OPTIONAL) owin object output spatstat.geom::owin function. default window background image. dr_properties List properties double immune rings. Please refer examples structure dr_properties. plot_image Boolean. Whether simulated image plotted. plot_categories String Vector specifying order cell categories plotted. Default NULL - cell categories \"Phenotype\" column used plotting. plot_colours String Vector specifying order colours correspond plot_categories arg. Default NULL - predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_double_rings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate double immune rings — simulate_double_rings","text":"data.frame simulated image","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_double_rings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate double immune rings — simulate_double_rings","text":"","code":"set.seed(610) # manually define the properties of the immune ring dr_properties <- list(D1 = list(name_of_cluster_cell = \"Tumour\",size = 300, shape = \"Circle\",centre_loc = data.frame(\"x\" = 1000, \"y\" = 1000),infiltration_types = c(\"Immune1\", \"Immune2\", \"Others\"),infiltration_proportions = c(0.15, 0.05, 0.05), name_of_ring_cell = \"Immune1\",immune_ring_width = 150,immune_ring_infiltration_types = c(\"Others\"),immune_ring_infiltration_proportions = c(0.15),name_of_double_ring_cell = \"Immune2\",double_ring_width = 100,double_ring_infiltration_types = c(\"Others\"), double_ring_infiltration_proportions = c(0.15)), D2 = list(name_of_cluster_cell = \"Tumour\",size = 300,shape = \"Oval\",centre_loc = data.frame(\"x\" = 1200, \"y\" = 1200),infiltration_types = c(\"Immune1\", \"Immune2\", \"Others\"), infiltration_proportions = c(0.15, 0.05, 0.05),name_of_ring_cell = \"Immune1\", immune_ring_width = 150,immune_ring_infiltration_types = c(\"Others\"), immune_ring_infiltration_proportions = c(0.15),name_of_double_ring_cell = \"Immune2\", double_ring_width = 100,double_ring_infiltration_types = c(\"Others\"), double_ring_infiltration_proportions = c(0.15)))  double_ring_image <- simulate_double_rings(bg_sample = bg1, n_dr = 2, dr_properties = dr_properties)"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_immune_rings.html","id":null,"dir":"Reference","previous_headings":"","what":"simulate_immune_rings — simulate_immune_rings","title":"simulate_immune_rings — simulate_immune_rings","text":"Based existing background image, simulate rings immune cells surround tumour clusters. tumour clusters immune rings simulated time. default values arguments give example immune ring simulation enable automatic simulation immune rings without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_immune_rings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulate_immune_rings — simulate_immune_rings","text":"","code":"simulate_immune_rings(   bg_sample = bg1,   bg_type = \"Others\",   n_ir = 2,   win = NULL,   ir_properties = list(I1 = list(name_of_cluster_cell = \"Tumour\", size = 600, shape =     \"Circle\", centre_loc = data.frame(x = 930, y = 1000), infiltration_types =     c(\"Immune1\", \"Immune2\", \"Others\"), infiltration_proportions = c(0.15, 0.05, 0.05),     name_of_ring_cell = \"Immune1\", immune_ring_width = 150,     immune_ring_infiltration_types = c(\"Others\"), immune_ring_infiltration_proportions =     c(0.15)), I2 = list(name_of_cluster_cell = \"Tumour\", size = 500, shape = \"Oval\",     centre_loc = data.frame(x = 1330, y = 1100), infiltration_types = c(\"Immune1\",          \"Immune2\", \"Others\"), infiltration_proportions = c(0.15, 0.05, 0.05),     name_of_ring_cell = \"Immune1\", immune_ring_width = 150,     immune_ring_infiltration_types = c(\"Others\"), immune_ring_infiltration_proportions =     c(0.15))),   plot_image = TRUE,   plot_categories = NULL,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_immune_rings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulate_immune_rings — simulate_immune_rings","text":"bg_sample (OPTIONAL) data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. bg_type (OPTIONAL) String name background cell type. default \"Others\". n_ir Number immune rings. must match arg length(ir_properties). win (OPTIONAL) owin object output spatstat.geom::owin function. default window background image. ir_properties List properties immune rings. Please refer examples structure ir_properties. plot_image Boolean. Whether simulated image plotted. plot_categories String Vector specifying order cell categories plotted. Default NULL - cell categories \"Phenotype\" column used plotting. plot_colours String Vector specifying order colours correspond plot_categories arg. Default NULL - predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_immune_rings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simulate_immune_rings — simulate_immune_rings","text":"data.frame simulated image","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_immune_rings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simulate_immune_rings — simulate_immune_rings","text":"","code":"set.seed(610) # manually define the properties of the immune ring ir_properties <- list(I1=list(name_of_cluster_cell=\"Tumour\", size=600, shape=\"Circle\",centre_loc=data.frame(\"x\"=930, \"y\"=1000), infiltration_types=c(\"Immune1\", \"Immune2\", \"Others\"), infiltration_proportions =c(0.15, 0.05, 0.05), name_of_ring_cell=\"Immune1\", immune_ring_width=150, immune_ring_infiltration_types=c(\"Others\"), immune_ring_infiltration_proportions=c(0.15)), I2=list(name_of_cluster_cell=\"Tumour\", size=500, shape=\"Oval\", centre_loc=data.frame(\"x\"=1330, \"y\"=1100), infiltration_types=c(\"Immune1\", \"Immune2\", \"Others\"), infiltration_proportions=c(0.15, 0.05, 0.05), name_of_ring_cell=\"Immune1\", immune_ring_width=150, immune_ring_infiltration_types=c(\"Others\"), immune_ring_infiltration_proportions=c(0.15))) # simulate immune rings (`n_ir` should match the length of `ir_properties`) immune_ring_image <- simulate_immune_rings(bg_sample=bg1, n_ir=2, ir_properties=ir_properties)"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_mixing.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate mixed background image — simulate_mixing","title":"Simulate mixed background image — simulate_mixing","text":"Based existing background image, simulate mixed cell types specified cell types proportions. default values arguments give example mixed cell type simulation enable automatic simulation mixed cell types without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_mixing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate mixed background image — simulate_mixing","text":"","code":"simulate_mixing(   bg_sample = bg1,   idents = c(\"Tumour\", \"Immune\", \"Others\"),   props = c(0.2, 0.4, 0.4),   plot_image = TRUE,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_mixing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate mixed background image — simulate_mixing","text":"bg_sample (OPTIONAL) data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. idents String Vector mixed cell types. props Numeric Vector proportions mixed cell types. plot_image Boolean. Whether simulated image plotted. plot_colours String Vector specifying order colours correspond idents arg. Default NULL - predefined colour vector used plotting..","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_mixing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate mixed background image — simulate_mixing","text":"data.frame simulated image","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_mixing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate mixed background image — simulate_mixing","text":"","code":"set.seed(610) mix_background <- simulate_mixing(bg_sample=bg1, idents=c(\"Tumour\",\"Immune\", \"Others\"), props=c(0.2, 0.4,  0.4), plot_image=TRUE)"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_stripes.html","id":null,"dir":"Reference","previous_headings":"","what":"simulate_stripes — simulate_stripes","title":"simulate_stripes — simulate_stripes","text":"Based existing background image, simulate stripes cells representing vessels. cell types widths stripes can specified. locations stripes randomly simulated. Please refer examples check properties stripes can specified. default values arguments give example vessel simulation enable automatic simulation vessels without specification argument.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_stripes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulate_stripes — simulate_stripes","text":"","code":"simulate_stripes(   bg_sample = bg1,   n_stripe_type = 2,   win = NULL,   stripe_properties = list(S1 = list(number_of_stripes = 1, name_of_stripe_cell =     \"Others\", width_of_stripe = 80, infiltration_types = c(\"Immune\"),     infiltration_proportions = c(0.08)), S2 = list(number_of_stripes = 1,     name_of_stripe_cell = \"Others\", width_of_stripe = 80, infiltration_types =     c(\"Immune\"), infiltration_proportions = c(0.08))),   plot_image = TRUE,   plot_categories = NULL,   plot_colours = NULL )"},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_stripes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulate_stripes — simulate_stripes","text":"bg_sample (OPTIONAL) data.frame SingleCellExperiment class object locations points representing background cells. cell types simulated based background sample. data.frame metadata SCE object colnames including \"Cell.X.Positions\" \"Cell.Y.Positions\". default use internal bg1 background image. n_stripe_type Number stripe types. length(stripe_properties. win (OPTIONAL) owin object spatstat.geom owin method. default window background image. stripe_properties List properties stripes. See examples format properties. Please refer examples structure stripe_properties. plot_image Boolean. Whether simulated image plotted. Default TRUE. plot_categories String Vector specifying order cell categories plotted. Default NULL - cell categories \"Phenotype\" column used plotting. plot_colours String Vector specifying order colours correspond plot_categories arg. Default NULL - predefined colour vector used plotting.","code":""},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_stripes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simulate_stripes — simulate_stripes","text":"data.frame simulated image","code":""},{"path":[]},{"path":"https://trigosteam.github.io/spaSim/reference/simulate_stripes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simulate_stripes — simulate_stripes","text":"","code":"stripe_properties = list( S1 = list(   number_of_stripes = 1,   name_of_stripe_cell = \"Others\",   width_of_stripe = 80,   infiltration_types = c(\"Immune\"),   infiltration_proportions = c(0.08) ), S2 = list(   number_of_stripes = 1,   name_of_stripe_cell = \"Others\",   width_of_stripe = 80,   infiltration_types = c(\"Immune\"),   infiltration_proportions = c(0.08))) set.seed(610) stripe_image <- simulate_stripes(bg_sample = bg1, n_stripe_type=2, win = NULL, stripe_properties = stripe_properties, plot_image = TRUE)"},{"path":"https://trigosteam.github.io/spaSim/news/index.html","id":"spasim-0991","dir":"Changelog","previous_headings":"","what":"spaSim 0.99.1","title":"spaSim 0.99.1","text":"NEW FEATURES Added parameter validity checks. SIGNIFICANT USER-VISIBLE CHANGES Improved parameter descriptions. BUG FIXES None","code":""},{"path":"https://trigosteam.github.io/spaSim/news/index.html","id":"spasim-0990","dir":"Changelog","previous_headings":"","what":"spaSim 0.99.0","title":"spaSim 0.99.0","text":"NEW FEATURES first version spaSim.","code":""}]
